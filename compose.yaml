version: '3.6'
services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: root1234
    command: server --console-address ":9001" /data


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  postgres:
    image: 'postgres:latest'
    container_name: postgres
    environment:
      - 'POSTGRES_DB=highload'
      - 'POSTGRES_PASSWORD=high_user'
      - 'POSTGRES_USER=high_user'
    command: postgres -c 'max_connections=1000'
    ports:
      - "5432:5432"
    restart: unless-stopped

  config:
    image: config:latest
    container_name: config
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./config
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - postgres
    restart: on-failure

  eureka:
    image: eureka:latest
    container_name: eureka
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - config
    restart: on-failure

  gateway:
    image: gateway:latest
    container_name: gateway
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka
    restart: on-failure

  login-service:
    image: login-service:latest
    container_name: login-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./login-service
      dockerfile: Dockerfile
    ports:
      - "8180:8180"
    depends_on:
      - gateway
    restart: on-failure

  user-service:
    image: user-service:latest
    container_name: user-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - login-service
    restart: on-failure

  admin-service:
    image: admin-service:latest
    container_name: admin-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    ports:
      - "8182:8182"
    depends_on:
      - login-service
      - user-service
    restart: on-failure

  order-service:
    image: order-service:latest
    container_name: order-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8183:8183"
    depends_on:
      - login-service
      - user-service
      - kafka
    restart: on-failure

  image-service:
    image: image-service:latest
    container_name: image-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./image-service
      dockerfile: Dockerfile
    ports:
      - "8185:8185"
    depends_on:
      - login-service
      - user-service
      - minio
    restart: on-failure

  notification-service:
    image: notification-service:latest
    container_name: notification-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8184:8184"
      - "5005:5005"
    depends_on:
      - login-service
      - user-service
      - kafka
    restart: on-failure

  profile-service:
    image: profile-service:latest
    container_name: profile-service
    environment:
      - 'PAGINATION_MAX_SIZE=50'
      - 'JWT_SECRET=ereboging'
      - 'JWT_EXPIRED=84600'
    build:
      context: ./profile-service
      dockerfile: Dockerfile
    ports:
      - "8186:8186"
    depends_on:
      - login-service
      - user-service
    restart: on-failure

volumes:
  minio_storage: { }